# TrueNAS SCALE Docker Compose - Complete with Frontend + Backend + PostgreSQL
# File: truenas-docker-compose-simple.yaml
# Format: Docker Compose v3.8 (NOT Kubernetes)

version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: aetherpharma-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pharmacy_db
      POSTGRES_USER: pharmacy_user
      POSTGRES_PASSWORD: pharmacy_password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    image: golang:1.21-alpine
    container_name: aetherpharma-backend
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: pharmacy_user
      DB_PASSWORD: pharmacy_password
      DB_NAME: pharmacy_db
      DB_SSL_MODE: disable
      JWT_SECRET: truenas-demo-secret
      ENCRYPTION_KEY: 32-character-encryption-key-here
      GIN_MODE: release
    command: |
      sh -c "
        echo 'Starting Backend...' &&
        apk add --no-cache git curl &&
        git clone --depth 1 https://github.com/jhustcoding/AetherPharma.git /app &&
        cd /app &&
        touch .env &&
        echo 'Waiting for PostgreSQL...' &&
        sleep 10 &&
        go run cmd/server/main.go
      "
    volumes:
      - app_data:/data

  frontend:
    image: node:18-alpine
    container_name: aetherpharma-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_BASE_URL: http://192.168.0.9:8080
      DISABLE_ESLINT_PLUGIN: true
      TSC_COMPILE_ON_ERROR: true
      GENERATE_SOURCEMAP: false
      CI: false
      SKIP_PREFLIGHT_CHECK: true
    command: |
      sh -c "
        echo 'Starting Frontend...' &&
        apk add --no-cache git &&
        git clone --depth 1 https://github.com/jhustcoding/AetherPharma.git /app &&
        cd /app/frontend &&
        echo 'Creating react-scripts override...' &&
        cat > node_modules/.bin/react-scripts << 'EOF'
        #!/bin/sh
        # Override react-scripts to skip type checking
        if [ \"\$1\" = \"start\" ]; then
          npx webpack serve --mode development --config node_modules/react-scripts/config/webpack.config.js --hot
        else
          exec node_modules/react-scripts/bin/react-scripts.js \"\$@\"
        fi
        EOF
        chmod +x node_modules/.bin/react-scripts &&
        echo 'Installing dependencies...' &&
        npm install &&
        echo 'Starting development server (NO TypeScript checking)...' &&
        SKIP_PREFLIGHT_CHECK=true npm start || (
          echo 'Fallback: Starting simple HTTP server...' &&
          npm run build &&
          npx serve -s build -l 3000
        )
      "

volumes:
  postgres_data:
  app_data: